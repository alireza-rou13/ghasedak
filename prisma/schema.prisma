// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  username String    @unique
  fullname String?
  hash     String?
  books    Book[]
  role     Role      @default(BASIC)
  city     City?     @relation(fields: [cityId], references: [id])
  cityId   String?
  data     Json?
  status   Boolean   @default(true)
  Settings Setting[]
}

model Book {
  id          String        @id @default(uuid())
  title       String
  description String?
  status      BookingStatus @default(WAITING)
  startDate   DateTime
  endDate     DateTime
  type        BookingType

  bookingLocationId String
  location          BookingLocation @relation(fields: [bookingLocationId], references: [id])

  createdBy   User   @relation(fields: [createdById], references: [id])
  createdById String

  updatedById String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("booking")
}

model BookingLocation {
  id     String @id @default(uuid())
  title  String @unique
  city   City   @relation(fields: [cityId], references: [id])
  cityId String
  order  Int    @default(0)
  Book   Book[]
}

model City {
  id              String            @id @default(uuid())
  title           String            @unique
  BookingLocation BookingLocation[]
  User            User[]
}

model Setting {
  id      String  @id @default(uuid())
  user    User    @relation(fields: [userId], references: [id])
  userId  String
  title   String  @unique
  key     String  @unique
  status  Boolean @default(false)
  options Json?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

enum Role {
  BASIC
  ISFBOOK
  ADMIN
}

enum BookingStatus {
  WAITING
  APPROVED
  REJECTED
  CANCELLED
}

enum BookingType {
  VIRTUAL
  PRESENCE
  HYBRID
}
